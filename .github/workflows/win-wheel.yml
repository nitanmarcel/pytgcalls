# This is the workflow to make and push wheels to PyPi

name: PyTgCalls-Windows
on:
  push:
    branches: [ dev-release ]
  workflow_dispatch:


jobs:
  pytgwin-build:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - name: Checkout dev-release
        uses: actions/checkout@v2
        with:
          ref: dev-release
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Setup Python${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pip requirements
        run: |
          python -m pip install wheel setuptools
      - name: Build wheel for Python${{ matrix.python-version }}
        run: |
          python setup.py sdist bdist_wheel
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pytgcalls-python${{ matrix.python-version }}
          path:
            dist/*.whl
  pytgwin-publish:
    runs-on: windows-2019
    needs: pytgwin-build
    steps:
      - name: Install Python3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install pip requirements
        run: |
          python -m pip install twine
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: tmp/
      - name: Extract artifacts
        run: |
          md dist
          Get-ChildItem -Path .\tmp -Recurse -File | Move-Item -Destination .\dist
      - name: Push to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          python -m twine check dist/*
          python -m twine upload dist/*