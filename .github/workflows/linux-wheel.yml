# This is the workflow to make and push wheels to PyPi

name: PyTgCalls-Linux
on:
  push:
    branches: [ dev-release ]

  workflow_dispatch:

jobs:
  pytglin-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout dev-release
        uses: actions/checkout@v2
        with:
          ref: dev-release
      - name: Setup Python3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v5.1.0
          platforms: all
      - name: Setup Node
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt install -y nodejs
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_ARCHS_LINUX: auto aarch64
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: 
            ./wheelhouse/*.whl
  pytglin-publish:
    runs-on: ubuntu-20.4
    needs: pytglin-build
    steps:
      - name: Install Python3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install pip requirements
        run: |
          python -m pip install twine
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: tmp/
      - name: Extract artifacts
        run: |
          mkdir dist/
          find tmp/ -type f -print0 | xargs -0 mv -t dist/
      - name: Test
        run: |
          ls dist/

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Build the Wheels via Docker
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get upgrade -y
      #     sudo apt-get remove -y docker docker-engine docker.io containerd runc
      #     sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
      #     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      #     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      #     sudo apt-get update
      #     sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      #     docker run --privileged --rm tonistiigi/binfmt --install all
      #     git clone https://github.com/pytgcalls/pytgcalls.git --branch dev-release
      #     cd pytgcalls
      #     chmod +x build.sh
      #     ./build.sh
      # - name: Push to PyPi
      #   env:
      #     TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      #   run: |
      #     cd pytgcalls
      #     cd dist
      #     rm *.tar.gz
      #     cd ..
      #     pip3 install twine
      #     python3 -m twine check dist/*
      #     python3 -m twine upload dist/*
